🐍 Python Basics – Full Theory with Examples
📌 1. What is Python?
Python is a high-level, interpreted, general-purpose programming language known for:

Simple syntax

Readability

Wide usage in data science, AI, web development, automation, etc.

print("Hello, Python!")  # Output: Hello, Python!
📌 2. Variables and Data Types
🔸 Variables:
Used to store data in memory. No need to declare type explicitly.
name = "Alice"
age = 25
height = 5.6
is_student = True
🔸 Common Data Types:
Type	Description	Example
int	Whole number	x = 10
float	Decimal number	pi = 3.14
str	String of characters	name = "Tom"
bool	Boolean (True/False)	status = False
None	Null value	data = None

📌 3. Operators
🔸 Arithmetic Operators:

x = 10
y = 3
print(x + y)  # 13
print(x - y)  # 7
print(x * y)  # 30
print(x / y)  # 3.333...
print(x % y)  # 1
print(x ** y) # 1000 (10³)
🔸 Comparison Operators:

print(x == y)  # False
print(x > y)   # True
📌 4. Control Flow (if, elif, else)
🔸 Example:

age = 18
if age >= 18:
    print("Adult")
elif age >= 13:
    print("Teenager")
else:
    print("Child")
📌 5. Loops
🔸 for loop:

for i in range(3):
    print("Hi", i)
# Output: Hi 0, Hi 1, Hi 2
🔸 while loop:

x = 0
while x < 3:
    print("x is", x)
    x += 1
📌 6. Functions
Reusable block of code using def.


def greet(name):
    return f"Hello, {name}"

print(greet("Alice"))  # Output: Hello, Alice
📌 7. Data Structures
🔸 List (ordered, mutable)

fruits = ["apple", "banana", "mango"]
fruits.append("orange")
print(fruits[0])  # apple
🔸 Tuple (ordered, immutable)

point = (4, 5)
print(point[1])  # 5
🔸 Dictionary (key-value pairs)

student = {"name": "Vikram", "age": 21}
print(student["name"])  # Vikram
🔸 Set (unordered, no duplicates)

nums = {1, 2, 2, 3}
print(nums)  # {1, 2, 3}
📌 8. Strings and Operations

s = "Python"
print(s.lower())     # python
print(s.upper())     # PYTHON
print(s[0])          # P
print(s[::-1])       # nohtyP (reversed)
📌 9. Input/Output
python
Copy
Edit
name = input("Enter your name: ")
print("Hello", name)
📌 10. Exception Handling
To handle errors safely:

try:
    result = 10 / 0
except ZeroDivisionError:
    print("You can't divide by zero.")
finally:
    print("Try block ended.")
📌 11. Classes and Objects (OOP Basics)

class Person:
    def __init__(self, name):
        self.name = name

    def greet(self):
        print("Hello,", self.name)

p = Person("Kumar")
p.greet()  # Output: Hello, Kumar
📌 12. Comments

# This is a single-line comment

"""
This is a 
multi-line comment
"""
🧠 Bonus Tips:
Use type() to check data types.


print(type(3.14))  # <class 'float'>
Use len() to get the length of strings, lists, etc.


print(len("Python"))  # 6
